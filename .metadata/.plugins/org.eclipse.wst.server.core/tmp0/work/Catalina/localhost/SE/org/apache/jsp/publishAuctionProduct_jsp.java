/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2017-12-27 06:46:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class publishAuctionProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/include/footer.jsp", Long.valueOf(1514356622538L));
    _jspx_dependants.put("/include/css_js.jsp", Long.valueOf(1514356622531L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html lang=\"zh-TW\">\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>AS拍</title>\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 掛載CSS樣式 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- 掛載JS樣式 -->\r\n");
      out.write("<script src=\"./js/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"./js/popper.min.js\"></script>\r\n");
      out.write("<script src=\"./js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"./js/main.js\"></script>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<!-- 要記得寫jstl的error回傳(insert fail , 值重複) -->\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 上方選單 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "include/topLink.jsp", out, true);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("        var isCheckImageType = true;  //是否檢查圖片副檔名\r\n");
      out.write("\r\n");
      out.write("        function checkFile(form)\r\n");
      out.write("        {\r\n");
      out.write("            var f = form;\r\n");
      out.write("            var re = /\\.(png|jpg|gif)$/i;  //允許的圖片副檔名\r\n");
      out.write("            if (isCheckImageType && !re.test(f.pic.value)) {\r\n");
      out.write("                alert(\"只允許上傳PNG,JPG或GIF影像檔\");\r\n");
      out.write("                return;\r\n");
      out.write("            } else {\r\n");
      out.write("            \tform.action = \"publishAuctionProductServlet\";\r\n");
      out.write("            \tform.submit();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        /*\r\n");
      out.write("        //這裡控制要檢查的項目，true表示要檢查，false表示不檢查\r\n");
      out.write("        var isCheckImageType = true;  //是否檢查圖片副檔名\r\n");
      out.write("        var isCheckImageWidth = true;  //是否檢查圖片寬度\r\n");
      out.write("        var isCheckImageHeight = true;  //是否檢查圖片高度\r\n");
      out.write("        var isCheckImageSize = true;  //是否檢查圖片檔案大小\r\n");
      out.write("\r\n");
      out.write("        var ImageSizeLimit = 100000;  //上傳上限，單位:byte\r\n");
      out.write("        var ImageWidthLimit = 1200;  //圖片寬度上限\r\n");
      out.write("        var ImageHeightLimit = 1000;  //圖片高度上限\r\n");
      out.write("\r\n");
      out.write("        function checkFile() {\r\n");
      out.write("            var f = document.FileForm;\r\n");
      out.write("            var re = /\\.(jpg|gif)$/i;  //允許的圖片副檔名\r\n");
      out.write("            if (isCheckImageType && !re.test(f.file1.value)) {\r\n");
      out.write("                alert(\"只允許上傳JPG或GIF影像檔\");\r\n");
      out.write("            } else {\r\n");
      out.write("                var img = new Image();\r\n");
      out.write("                img.onload = checkImage;\r\n");
      out.write("                img.src = f.file1.value;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        function checkImage() {\r\n");
      out.write("            if (isCheckImageWidth && this.width > ImageWidthLimit) {\r\n");
      out.write("                showMessage('寬度','px',this.width,ImageWidthLimit);\r\n");
      out.write("            } else if (isCheckImageHeight && this.height > ImageHeightLimit) {\r\n");
      out.write("                showMessage('高度','px',this.height,ImageHeightLimit);\r\n");
      out.write("            } else if (isCheckImageSize && this.fileSize > ImageSizeLimit) {\r\n");
      out.write("                showMessage('檔案大小','kb',this.fileSize/1000,ImageSizeLimit/1000);\r\n");
      out.write("            } else {\r\n");
      out.write("                document.FileForm.submit();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        function showMessage(kind,unit,real,limit) {\r\n");
      out.write("            var msg = \"您所選擇的圖片kind為 real unit\\n超過了上傳上限 limit unit\\n不允許上傳！\"\r\n");
      out.write("            alert(msg.replace(/kind/,kind).replace(/unit/g,unit).replace(/real/,real).replace(/limit/,limit));\r\n");
      out.write("        }\r\n");
      out.write("        * */\r\n");
      out.write("    </script>\r\n");
      out.write("\t\r\n");
      out.write("    <!-- 內容區 -->\r\n");
      out.write("    <div id=\"publishAuctionProduct_content\" class=\"content\">\r\n");
      out.write("\t    <div class=\"topic\">刊登拍賣商品</div>\r\n");
      out.write("\t    <div class=\"content_container\">\r\n");
      out.write("\t        <form id=\"publishAuctionProductForm\" name=\"publishAuctionProductForm\" class=\"center\" onsubmit=\"checkFile(this)\">\r\n");
      out.write("\t\r\n");
      out.write("\t            <div class=\"form-group col-md-6\">\r\n");
      out.write("\t                <label class=\"col-form-label\" for=\"title\">商品標題</label>\r\n");
      out.write("\t                <input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\" placeholder=\"輸入商品標題\" required>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <div class=\"form-group col-md-6\">\r\n");
      out.write("\t                <label class=\"col-form-label\" for=\"price\">商品價格</label>\r\n");
      out.write("\t                <input id=\"price\" name=\"price\" class=\"form-control\" onkeyup=\"value=value.replace(/[^\\d]/g,'')\" placeholder=\"輸入商品價格\" required>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <div class=\"form-group col-md-6\">\r\n");
      out.write("\t                <label class=\"col-form-label\" for=\"amount\">商品數量</label>\r\n");
      out.write("\t                <input id=\"amount\" name=\"amount\" class=\"form-control\" onkeyup=\"value=value.replace(/[^\\d]/g,'')\" placeholder=\"輸入商品數量\" required>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <div class=\"form-group col-md-6\">\r\n");
      out.write("\t                <label class=\"col-form-label\" for=\"Category\">商品分類</label>\r\n");
      out.write("\t                <select id=\"category\" class=\"form-control\" name=\"category\">\r\n");
      out.write("\t                    <option value=\"Digit\" selected>3C數位</option>\r\n");
      out.write("                        <option value=\"Appliances\">家電</option>\r\n");
      out.write("                        <option value=\"Food\">食品</option>\r\n");
      out.write("                        <option value=\"Apparel\">服飾</option>\r\n");
      out.write("                        <option value=\"MakeUps\">美妝</option>\r\n");
      out.write("                        <option value=\"Life\">生活</option>\r\n");
      out.write("\t                </select>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <div class=\"form-group col-md-6\">\r\n");
      out.write("\t                <label for=\"pic\">上傳圖片</label>\r\n");
      out.write("\t                <input type=\"file\" name=\"pic\" class=\"form-control-file\" id=\"pic\" required>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <div class=\"form-group col-md-6\">\r\n");
      out.write("\t                <label for=\"description\">商品說明</label>\r\n");
      out.write("\t                <textarea name=\"description\" class=\"form-control\" id=\"description\" rows=\"5\"></textarea>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <div class=\"col-md-6 text_center\">\r\n");
      out.write("\t                <button type=\"submit\" class=\"btn btn-primary \">確認送出</button>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </form>\r\n");
      out.write("\t\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- 網站資訊 -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"left footer\">\r\n");
      out.write("\t 網站基本資訊\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
